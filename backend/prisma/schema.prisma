generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  password     String
  post         Post[]
  comment      Comment[]
  like         Like[]
  commentReply CommentReply[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id       Int       @id @default(autoincrement())
  title    String
  content  String
  authorId Int
  comment  Comment[]
  like     Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
}

model Comment {
  id           Int            @id @default(autoincrement())
  content      String
  postId       Int
  userId       Int
  commentReply CommentReply[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model CommentReply {
  id        Int    @id @default(autoincrement())
  content   String
  commentId Int
  userId    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
}

model Like {
  id     Int @id @default(autoincrement())
  postId Int
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
